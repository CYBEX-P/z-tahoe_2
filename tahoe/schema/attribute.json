{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "title": "attribute_core",
  "description" : "Validate core structure of an attribute.",
  "required": ["itype", "uuid", "att_type", "value"],
  "properties": {
    "itype": {"const" : "attribute"},
    "uuid": { "type": "string", "pattern" : "^attribute--[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[89abAB][0-9a-fA-F]{3}\\-[0-9a-fA-F]{12}$"},
	"_valid": {"type": "boolean"},
	"att_type": { "enum" : ["aba_rtn",
							"asn",
							"authentihash",
							"bank_ac_nr",
							"bin",
							"bro",
							"btc",
							"campaign_id",
							"campaign_name",
							"cc_no",
							"cdhash",
							"city_name",
							"comment",
							"comp_algo",
							"continent_code",
							"cookie",
							"cortex",
							"country_code",
							"country_code2",
							"country_code3",
							"country_name",
							"country_of_residence",
							"cpe",
							"date_of_birth",
							"datetime",
							"datetime_iso",
							"dns_soa_email",
							"domain",
							"duration",
							"email_addr",
							"email_attachment",
							"email_body",
							"email_display_name",
							"email_display_name",
							"email_header",
							"email_message_id",
							"email_mime_boundary",
							"email_reply_to",
							"email_subject",
							"email_thread_index",
							"email_x_mailer",
							"encr_algo",
							"filename",
							"filepath",
							"first_name",
							"frequent_flyer_number",
							"gender",
							"gene",
							"github_organization",
							"github_repository",
							"github_username",
							"hash",
							"hassh_md5",
							"hasshserver_md5",
							"hostname",
							"http_method",
							"iban",
							"id_card_number",
							"impfuzzy",
							"imphash",
							"ipv4",
							"ipv6",
							"ja3_md5",
							"kex_algo",
							"last_name",
							"latitude",
							"longitude",
							"mac_algo",
							"mac_address",
							"mac_eui_64",
							"machine_name",
							"malware_type",
							"md5",
							"micr_rtn",
							"middle_name",
							"mime_type",
							"mobile_app_id",
							"mutex",
							"nationality",
							"other",
							"passenger_name_record_locator_number",
							"passport_country",
							"passport_expiration",
							"passport_number",
							"password",
							"pattern_in_file",
							"pattern_in_memory",
							"pattern_in_traffic",
							"payment_details",
							"pehash",
							"phone_number",
							"place_of_birth",
							"port",
							"premium_rate_telephone_number",
							"primary_residence",
							"protocol",
							"pub_key_algo",
							"regdata",
							"region_code",
							"region_name", 
							"regkey",
							"sessionid",
							"sha1",
							"sha224",
							"sha256",
							"sha384",
							"sha512",
							"sha512/224",
							"sha512/256",
							"sigma",
							"size_bytes",
							"snort",
							"ssdeep",
							"ssh_version",
							"swift_bic",
							"text",
							"threat_actor",
							"timestamp",
							"timezone",
							"tlsh",
							"travel_details",
							"uri",
							"url",
							"user_agent",
							"username",
							"uuid",
							"visa_issue_date",
							"visa_number",
							"vulnerability",
							"whois_creation_date",
							"whois_registrant_email",
							"whois_registrant_name",
							"whois_registrant_org",
							"whois_registrant_phone",
							"whois_registrar",
							"win_scheduled_task",
							"win_service_displayname",
							"win_service_name",
							"x_misp_anonymized",
							"x_misp_attachment",
							"x_misp_boolean",
							"x_misp_counter",
							"x_misp_float",
							"x_misp_hex",
							"x_misp_named_pipe",
							"x_misp_target_external",
							"x_misp_target_location",
							"x_misp_target_org",
							"x509_fingerprint_md5",
							"x509_fingerprint_sha1",
							"x509_fingerprint_sha256",
							"xmr",
							"yara",
							"zeek"]]},
	"value": {},
	"_ref" : { "type" : "array", "items" : { "type": "string", "pattern" : "^(object|raw)--[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[89abAB][0-9a-fA-F]{3}\\-[0-9a-fA-F]{12}$"} }
  },
  "additionalProperties": false,
  
  "allOf" : [
  
  {"if":{"properties":{"att_type":{"const":     "asn"    }}}, "then": {"properties": { "value": { "type": "integer", "minimum": 0, "maximum": 65535 }}}},
  
  {"if":{"properties":{"att_type":{"const":     "btc"    }}}, "then": {"properties": { "value": { "type": "string", "pattern": "^[13][a-km-zA-HJ-NP-Z1-9]{25,34}$" }}}},
  
  {"if":{"properties":{"att_type":{"const": "comp_algo"  }}}, "then": {"properties": { "value": { "enum" : ["none", "zlib"] }}}},  
  
  {"if":{"properties":{"att_type":{"const":   "domain"   }}}, "then": {"properties": { "value": { "type": "string", "pattern": "^(?!:\/\/)([a-zA-Z0-9-_]+\\.)*[a-zA-Z0-9][a-zA-Z0-9-_]+\\.[a-zA-Z]{2,11}?$" }}}},
  
  {"if":{"properties":{"att_type":{"const": "encr_algo"  }}}, "then": {"properties": { "value": { "enum" : ["3des-cbc","blowfish-cbc","twofish256-cbc","twofish-cbc","twofish192-cbc","twofish128-cbc","aes256-cbc","aes192-cbc","aes128-cbc","serpent256-cbc","serpent192-cbc","serpent128-cbc","arcfour","idea-cbc","cast128-cbc","none","des-cbc","arcfour128","arcfour256","aes128-ctr","aes192-ctr","aes256-ctr","3des-ctr","blowfish-ctr","twofish128-ctr","twofish192-ctr","twofish256-ctr","serpent128-ctr","serpent192-ctr","serpent256-ctr","idea-ctr","cast128-ctr","aes128-gcm","AEAD_AES_128_GCM","AEAD_AES_256_GCM", "chacha20-poly1305", "rijndael-cbc"] }}}},
  
  {"if":{"properties":{"att_type":{"const":  "filename"  }}}, "then": {"properties": { "value": { "type": "string"}}}},
   
  {"if":{"properties":{"att_type":{"const":    "hash"    }}}, "then": {"properties": { "value": { "type": "string", "pattern": "^[a-fA-F0-9]+$" }}}},
  
  {"if":{"properties":{"att_type":{"const":  "hostname"  }}}, "then": {"properties": { "value": { "type": "string" }}}},
  
  {"if":{"properties":{"att_type":{"const":     "id"     }}}, "then": {"properties": { "value": { "type": ["integer", "string"]}}}},
  
  {"if":{"properties":{"att_type":{"const":    "ipv4"    }}}, "then": {"properties": { "value": { "type": "string", "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$" }}}},
  
  {"if":{"properties":{"att_type":{"const":    "ipv6"    }}}, "then": {"properties": { "value": { "type": "string", "pattern": "^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$" }}}},
  
  {"if":{"properties":{"att_type":{"const":  "kex_algo"  }}}, "then": {"properties": { "value": { "enum" : ["diffie-hellman-group-exchange-sha1","diffie-hellman-group-exchange-sha256","diffie-hellman-group1-sha1","diffie-hellman-group14-sha1","diffie-hellman-group14-sha256","diffie-hellman-group15-sha512","diffie-hellman-group16-sha512","diffie-hellman-group17-sha512","diffie-hellman-group18-sha512","ecdh-sha2-*","ecmqv-sha2","gss-group1-sha1-*","gss-group14-sha1-*","gss-gex-sha1-*","gss-*","rsa1024-sha1","rsa2048-sha256","ext-info-s","ext-info-c","curve25519-sha256", "ecdh-sha2-nistp256", "ecdh-sha2-nistp384", "ecdh-sha2-nistp521"] }}}},
  
  {"if":{"properties":{"att_type":{"const":    "name"    }}}, "then": {"properties": { "value": { "type": "string"}}}},
  
  {"if":{"properties":{"att_type":{"const":  "mac_algo"  }}}, "then": {"properties": { "value": { "enum" : ["hmac-sha1","hmac-sha1-96","hmac-md5","hmac-md5-96","none","AEAD_AES_128_GCM","AEAD_AES_256_GCM","hmac-sha2-256","hmac-sha2-512","hmac-sha2-256-etm"] }}}},
  
  {"if":{"properties":{"att_type":{"const":     "md5"    }}}, "then": {"properties": { "value": { "type": "string", "pattern": "^[a-fA-F\\d]{32}$" }}}},
  
  {"if":{"properties":{"att_type":{"const":   "network"  }}}, "then": {"properties": { "value": { "type": "string", "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(3[0-2]|[1-2][0-9]|[0-9]))$" }}}},
  
  {"if":{"properties":{"att_type":{"const":    "port"    }}}, "then": {"properties": { "value": { "type": "integer", "minimum": 0, "maximum": 65535 }}}},
  
  {"if":{"properties":{"att_type":{"const":"pub_key_algo"}}}, "then": {"properties": { "value": { "enum" : ["ssh-dss","ssh-rsa","rsa-sha2-256","rsa-sha2-512","spki-sign-rsa","spki-sign-dss","pgp-sign-rsa","pgp-sign-dss","null","ecdsa-sha2-*","x509v3-ssh-dss","x509v3-ssh-rsa","x509v3-rsa2048-sha256","x509v3-ecdsa-sha2-*","ssh-rsa-cert-v01", "ssh-dss-cert-v01","ecdsa-sha2-nistp256-cert-v01","ecdsa-sha2-nistp384-cert-v01","ecdsa-sha2-nistp521-cert-v01","ssh-ed25519-cert-v01","ecdsa-sha2-nistp256","ecdsa-sha2-nistp384", "ecdsa-sha2-nistp521","ssh-ed25519"] }}}},
  
  {"if":{"properties":{"att_type":{"const":   "sessionid"  }}}, "then": {"properties": { "value": { "type": "string"}}}},
  
  {"if":{"properties":{"att_type":{"const":    "sha1"    }}}, "then": {"properties": { "value": { "type": "string", "pattern": "^[0-9A-Fa-f]{5,40}$" }}}},
  
  {"if":{"properties":{"att_type":{"const":   "sha256"   }}}, "then": {"properties": { "value": { "type": "string", "pattern": "^[A-Fa-f0-9]{64}$" }}}},
  
  {"if":{"properties":{"att_type":{"const":     "text"   }}}, "then": {"properties": { "value": { "type": "string", "maxLength": 100000 }}}},
  
  {"if":{"properties":{"att_type":{"const":  "timestamp" }}}, "then": {"properties": { "value": { "type": "number", "minimum": 0}}}},

  {"if":{"properties":{"att_type":{"const":     "url"    }}}, "then": {"properties": { "value": { "type": "string"}}}},
  
  {"if":{"properties":{"att_type":{"const":    "uuid"    }}}, "then": {"properties": { "value": { "type": "string", "pattern" : "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[89abAB][0-9a-fA-F]{3}\\-[0-9a-fA-F]{12}$"}}}}

  
  ]
}
